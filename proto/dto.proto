syntax = "proto3";
package dto;
option go_package ="proto";

service ProductService {
    rpc Fetch (FetchDataRequest) returns (FetchDataResponse) {}
    rpc List (ListProductsRequest) returns (ListProductsResponse) {}
    rpc Stream (StreamProductsRequest) returns (stream StreamProductsResponse) {}
}

message FetchDataRequest{
    string url = 1;
}

message FetchDataResponse{
    string error = 1;
}

message ListProductsRequest{
    Page paging =1;
    Sort sorting =2;
}

message Page{
    int64 skip = 1;
    int64 limit = 2;
}

message Sort {
    string name = 1;
    int32 direct = 2;
}

message ListProductsResponse {
    int32 pageSize = 1;
    repeated Product list=2;
}

message StreamProductsRequest{
    Sort sorting =1;
}

message StreamProductsResponse{
    Product product = 1;
}

message Product {
    string name = 1;
    float price = 2;
    int32 changePrice = 3;
    uint32 lastUpdate = 4;
}
